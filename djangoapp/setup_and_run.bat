@echo off
setlocal EnableDelayedExpansion

ECHO.
ECHO  ======================================================
ECHO   MilliPW Django Project - Interactive Setup (DEBUG MODE)
ECHO  ======================================================
ECHO.
ECHO [DEBUG] Script started. Press any key to check for Python.
PAUSE >nul

:: --- Check for Python ---
python --version >nul 2>&1
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Python is not found in your PATH.
    ECHO Please install Python 3.8+ and make sure to "Add to PATH" during installation.
    PAUSE
    EXIT /B 1
)
ECHO [SUCCESS] Python was found in your PATH.

ECHO.
ECHO [DEBUG] Press any key to proceed to .env configuration.
PAUSE >nul

:: --- Database Configuration ---
:: --- Database Configuration ---
:: This section now runs every time to allow for easy re-configuration.

IF EXIST .env (
    ECHO [WARNING] An existing .env file was found and will be overwritten.
)

:PROMPT_FOR_DB_DETAILS
ECHO.
ECHO [INFO] Please provide the details for your LOCAL PostgreSQL database.
ECHO        Database Name and Password cannot be empty.
ECHO.

set /p "DB_HOST=Enter Database Host (default is localhost): "
set /p "DB_PORT=Enter Database Port (default is 5432): "
set /p "DB_USER=Enter Database User (default is postgres): "
set /p "DB_NAME=Enter Database Name (e.g., postgres): "
set /p "DB_PASS=Enter Database Password: "

:: --- Input Validation ---
IF "%DB_NAME%"=="" (
    ECHO.
    ECHO [ERROR] Database Name cannot be empty. Please try again.
    PAUSE
    GOTO :PROMPT_FOR_DB_DETAILS
)
IF "%DB_PASS%"=="" (
    ECHO.
    ECHO [ERROR] Database Password cannot be empty. Please try again.
    PAUSE
    GOTO :PROMPT_FOR_DB_DETAILS
)

:: Set defaults if host/port are empty
IF "%DB_HOST%"=="" set "DB_HOST=localhost"
IF "%DB_PORT%"=="" set "DB_PORT=5432"
IF "%DB_USER%"=="" set "DB_USER=postgres"

ECHO.
ECHO [INFO] Creating/updating .env file...

:: Use !VAR! (delayed expansion) to safely handle special characters in the password.
:: The > operator will create a new file or completely overwrite an existing one.
(
    ECHO # This file was generated by the setup script.
    ECHO DATABASE_URL="postgres://!DB_USER!:!DB_PASS!@!DB_HOST!:!DB_PORT!/!DB_NAME!"
) > .env

ECHO.
ECHO [SUCCESS] .env file has been created/updated successfully!
ECHO.
ECHO [DEBUG] Press any key to set up the virtual environment.
PAUSE >nul

:: --- Virtual Environment Setup ---
ECHO [STEP 1] Setting up the Python virtual environment...
IF NOT EXIST venv (
    ECHO  - Creating virtual environment in 'venv' folder...
    python -m venv venv
) ELSE (
    ECHO  - Virtual environment 'venv' already exists.
)

:: --- CRITICAL CHECK ---
IF NOT EXIST venv\Scripts\python.exe (
    ECHO [FATAL ERROR] Virtual environment creation failed!
    ECHO The file 'venv\Scripts\python.exe' was not found.
    ECHO This can be caused by permissions issues or an incomplete Python installation.
    PAUSE
    EXIT /B 1
)
ECHO [SUCCESS] Virtual environment check passed.

ECHO.
ECHO [DEBUG] Press any key to install requirements.txt.
PAUSE >nul

:: --- Dependency Installation ---
ECHO [STEP 2] Installing required packages from requirements.txt...
CALL venv\Scripts\pip.exe install -r requirements.txt
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Failed to install packages. The script will now pause.
    PAUSE
    EXIT /B 1
)
ECHO [SUCCESS] Packages installed.

ECHO.
ECHO [DEBUG] Press any key to run database migrations.
PAUSE >nul

:: --- Database Migration ---
ECHO [STEP 3] Applying database migrations...
CALL venv\Scripts\python.exe manage.py migrate
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Database migration failed. The script will now pause.
    PAUSE
    EXIT /B 1
)
ECHO [SUCCESS] Migrations applied.

ECHO.
ECHO [DEBUG] Press any key to seed the database.
PAUSE >nul

:: --- Database Seeding ---
ECHO [STEP 4] Seeding the database...
CALL venv\Scripts\python.exe manage.py seed_db --no-input
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Database seeding failed. The script will now pause.
    PAUSE
    EXIT /B 1
)
ECHO [SUCCESS] Database seeded.

ECHO.
ECHO [DEBUG] Press any key to start the development server.
PAUSE >nul

:: --- Final Run ---
ECHO  ======================================================
ECHO                  Setup Complete!
ECHO  ======================================================
ECHO.
ECHO [FINAL STEP] Starting the Django development server...

CALL venv\Scripts\python.exe manage.py runserver

endlocal
ECHO.
ECHO Script finished.
PAUSE