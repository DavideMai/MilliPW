@echo off
setlocal

ECHO.
ECHO  ======================================================
ECHO   MilliPW Django Project - Interactive Setup for Windows
ECHO  ======================================================
ECHO.

:: --- Check for Python ---
python --version >nul 2>&1
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Python is not found in your PATH.
    ECHO Please install Python 3.8+ and make sure to "Add to PATH" during installation.
    PAUSE
    EXIT /B 1
)

:: --- Database Configuration ---
IF NOT EXIST .env (
    ECHO [INFO] Database configuration (.env file) not found. Let's create it.
    ECHO Please provide the details for your LOCAL PostgreSQL database.
    ECHO.

    set /p "DB_NAME=Enter Database Name (e.g., millipw_db): "
    set /p "DB_USER=Enter Database User (e.g., postgres): "
    set /p "DB_PASS=Enter Database Password: "
    set /p "DB_HOST=Enter Database Host (default is localhost): "
    set /p "DB_PORT=Enter Database Port (default is 5432): "

    IF "%DB_HOST%"=="" set "DB_HOST=localhost"
    IF "%DB_PORT%"=="" set "DB_PORT=5432"

    ECHO.
    ECHO [INFO] Creating .env file with the following connection string:
    ECHO DATABASE_URL="postgres://%DB_USER%:%DB_PASS%@%DB_HOST%:%DB_PORT%/%DB_NAME%"
    
    (
        ECHO # This file was generated by the setup script.
        ECHO DATABASE_URL="postgres://%DB_USER%:%DB_PASS%@%DB_HOST%:%DB_PORT%/%DB_NAME%"
    ) > .env

    ECHO.
    ECHO  .env file created successfully!
    ECHO.
    PAUSE
) ELSE (
    ECHO [INFO] .env file already exists. Using existing database configuration.
)

:: --- Virtual Environment Setup ---
ECHO.
ECHO [STEP 1] Setting up the Python virtual environment...
IF NOT EXIST venv (
    ECHO  - Creating virtual environment in 'venv' folder...
    python -m venv venv
) ELSE (
    ECHO  - Virtual environment 'venv' already exists. Skipping creation.
)

:: --- Dependency Installation ---
ECHO.
ECHO [STEP 2] Installing required packages from requirements.txt...
CALL venv\Scripts\pip.exe install -r requirements.txt
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Failed to install packages. Please check your internet connection and requirements.txt.
    PAUSE
    EXIT /B 1
)

:: --- Database Migration ---
ECHO.
ECHO [STEP 3] Applying database migrations (creating tables)...
ECHO This may take a moment.
CALL venv\Scripts\python.exe manage.py migrate
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Database migration failed.
    ECHO Please check your .env file and ensure your PostgreSQL server is running.
    PAUSE
    EXIT /B 1
)

:: --- Database Seeding ---
ECHO.
ECHO [STEP 4] Seeding the database with initial data...
:: We will run the seed command without the interactive 'yes' prompt for automation
CALL venv\Scripts\python.exe manage.py seed_db --no-input
IF %ERRORLEVEL% NEQ 0 (
    ECHO [ERROR] Database seeding failed.
    PAUSE
    EXIT /B 1
)

:: --- Final Run ---
ECHO.
ECHO  ======================================================
ECHO                  Setup Complete!
ECHO  ======================================================
ECHO.
ECHO [FINAL STEP] Starting the Django development server...
ECHO You can access the application at http://127.0.0.1:8000
ECHO Press CTRL+C in this window to stop the server.
ECHO.

CALL venv\Scripts\python.exe manage.py runserver

endlocal